<!-- views/code_block.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <!-- ... (existing head content) ... -->

    <!-- Include CodeMirror CSS and JS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/codemirror@5.62.0/lib/codemirror.css">
    <script src="https://cdn.jsdelivr.net/npm/codemirror@5.62.0/lib/codemirror.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/codemirror@5.62.0/mode/javascript/javascript.js"></script>
</head>
<body>
    <h1>Code Block: <%= mycode.title %></h1>

    <form id="updateForm" action="/update/<%= mycode.id %>" method="post">
        <label for="codeBody">Code Body:</label>
        <textarea id="codeBody" name="codeBody" required><%= mycode.body %></textarea>
        <br>
        <!-- No need for a submit button -->
    </form>

    <div id="itemIdContainer" data-item-id="<%= mycode._id %>"></div>

    <script src="/socket.io/socket.io.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/codemirror@5.62.0/addon/runmode/runmode.js"></script>
    <script>
        const itemId = document.getElementById('itemIdContainer').getAttribute('data-item-id');
        const isMentor = 0;

        // Initialize CodeMirror
        const codeBody = document.getElementById('codeBody');
        const liveCodeBody = document.getElementById('liveCodeBody');
        const codeMirror = CodeMirror.fromTextArea(codeBody, {
            mode: 'javascript',
            lineNumbers: true,
            lineWrapping: true,
        });

        const socket = io({ query: { itemId, isMentor } });

        // Apply changes made by other users
        socket.on('updateCodeBody', (data) => {
            console.log('Received updateCodeBody event:', data);
            if(data.good_ans == 1){
                const imageUrl = '/images/good-job.png';  // Assuming this is the relative path from the 'public' directory
                const bigImageWindow = window.open(imageUrl, '_blank');
                if (bigImageWindow) {
                    bigImageWindow.focus();
                } else {
                    alert('Popup blocker may be preventing the new window from opening. but good job you did it.');
                }
            }
            if (data.itemId === itemId && data.source !== 'user') {
                liveCodeBody.innerHTML = ''; // Clear existing content
                CodeMirror.runMode(data.newBody, 'javascript', liveCodeBody);
            }
        });

        // Apply changes made by the current user
        codeMirror.on('change', (instance, changeObj) => {
            const newBody = instance.getValue();
            console.log('Emitting updateCodeBody event:', { itemId, newBody, source: 'user' });
            socket.emit('updateCodeBody', { itemId, newBody, source: 'user' });
        });
    </script>
</body>
</html>
